/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package System;

import dao.CategoryDao;
import dao.ProductDao;
import java.sql.*;
import java.text.ParseException;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import model.Category;
import model.Product;

/**
 *
 * @author ADMIN
 */
public class ManageProduct extends javax.swing.JFrame {

    private String usernameLogin = null;

    /**
     * Creates new form UpdateProduct
     */
    public ManageProduct() {
        initComponents();
        setLocationRelativeTo(null);

        btnAddCategory.setEnabled(false);
        btnDeleteCategory.setEnabled(false);
        btnAddProduct.setEnabled(false);
        btnUpdateProduct.setEnabled(false);
        btnDeleteProduct.setEnabled(false);

        jlbCategoryId.setText("");
        jlbCategoryName.setText("");
        try {
            showProductTable();
            showCategoryTable();
        } catch (SQLException ex) {
            Logger.getLogger(ManageProduct.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public ManageProduct(String username) {
        initComponents();
        setLocationRelativeTo(null);
        usernameLogin = username;

        btnAddCategory.setEnabled(false);
        btnDeleteCategory.setEnabled(false);
        btnAddProduct.setEnabled(false);
        btnUpdateProduct.setEnabled(false);
        btnDeleteProduct.setEnabled(false);

        jlbCategoryId.setText("");
        jlbCategoryName.setText("");
        try {
            showProductTable();
            showCategoryTable();
        } catch (SQLException ex) {
            Logger.getLogger(ManageProduct.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void showProductTable() throws SQLException {
        String productName = jtfSearchProduct.getText();
        List<Product> listProduct = new ProductDao().getAllProductByName(productName);
        DefaultTableModel model = (DefaultTableModel) jtbProduct.getModel();
        model.setRowCount(0);
        for (Product product : listProduct) {
            model.addRow(new Object[]{product.getProductId(), product.getProductName(),
                product.getCategoryId(), product.getPrice()});
        }
    }

    public void showCategoryTable() throws SQLException {
        String categoryName = jtfCategoryName.getText();
        List<Category> listCategory = new CategoryDao().getAllByCategoryName(categoryName);
        DefaultTableModel modelCategory = (DefaultTableModel) jtbCategory.getModel();
        modelCategory.setRowCount(0);
        for (Category category : listCategory) {
            modelCategory.addRow(new Object[]{category.getCategoryId(), category.getCategoryName()});
        }
        btnDeleteCategory.setEnabled(false);
    }

    public void showBtnAddCategory() {
        String categoryName = jtfCategoryName.getText();
        if (categoryName.equals("")) {
            btnAddCategory.setEnabled(false);
        } else {
            btnAddCategory.setEnabled(true);
        }
    }

    public void showBtnAddProduct() {
        String productName = jtfProductName.getText();
        String categoryId = jlbCategoryId.getText();
        String price = jtfPrice.getText();
        if (productName.equals("") || categoryId.equals("") || price.equals("")) {
            btnAddProduct.setEnabled(false);
        } else {
            btnAddProduct.setEnabled(true);
        }
    }

    public void clear() {
        jlbCategoryId.setText("");
        jlbCategoryName.setText("");
        jtfPrice.setText("");
        jtfProductName.setText("");
        jtfSearchProduct.setText("");
        btnAddCategory.setEnabled(false);
        btnAddProduct.setEnabled(false);
        btnUpdateProduct.setEnabled(false);
        btnDeleteProduct.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtbProduct = new javax.swing.JTable();
        btnExit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbCategory = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jtfCategoryName = new javax.swing.JTextField();
        btnAddCategory = new javax.swing.JButton();
        btnDeleteCategory = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtfProductName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfPrice = new javax.swing.JTextField();
        btnAddProduct = new javax.swing.JButton();
        btnDeleteProduct = new javax.swing.JButton();
        btnUpdateProduct = new javax.swing.JButton();
        jlbCategoryId = new javax.swing.JLabel();
        jlbCategoryName = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtfSearchProduct = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1600, 900));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jtbProduct.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jtbProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ProductId", "Product Name", "CategoryId", "Price"
            }
        ));
        jtbProduct.setRowHeight(40);
        jtbProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbProductMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbProduct);
        if (jtbProduct.getColumnModel().getColumnCount() > 0) {
            jtbProduct.getColumnModel().getColumn(0).setMaxWidth(100);
            jtbProduct.getColumnModel().getColumn(1).setMaxWidth(200);
            jtbProduct.getColumnModel().getColumn(2).setMaxWidth(100);
            jtbProduct.getColumnModel().getColumn(3).setMaxWidth(70);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1064, 203, -1, -1));

        btnExit.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        getContentPane().add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1522, 6, -1, -1));

        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(1429, 6, -1, -1));

        jtbCategory.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jtbCategory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CategoryId", "CategoryName"
            }
        ));
        jtbCategory.setRowHeight(40);
        jtbCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbCategoryMouseClicked(evt);
            }
        });
        jtbCategory.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jtbCategoryComponentShown(evt);
            }
        });
        jScrollPane2.setViewportView(jtbCategory);
        if (jtbCategory.getColumnModel().getColumnCount() > 0) {
            jtbCategory.getColumnModel().getColumn(0).setMaxWidth(80);
        }

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 203, 353, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Category Name:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 163, -1, -1));

        jtfCategoryName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jtfCategoryName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfCategoryNameKeyReleased(evt);
            }
        });
        getContentPane().add(jtfCategoryName, new org.netbeans.lib.awtextra.AbsoluteConstraints(246, 160, 185, -1));

        btnAddCategory.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnAddCategory.setText("Add Category");
        btnAddCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCategoryActionPerformed(evt);
            }
        });
        getContentPane().add(btnAddCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 648, 167, -1));

        btnDeleteCategory.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnDeleteCategory.setText("Delete Category");
        btnDeleteCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCategoryActionPerformed(evt);
            }
        });
        getContentPane().add(btnDeleteCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 699, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Product Name:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(622, 203, -1, 31));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Category Id:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(622, 301, -1, 31));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Category Name:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(622, 402, -1, 31));

        jtfProductName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jtfProductName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfProductNameKeyReleased(evt);
            }
        });
        getContentPane().add(jtfProductName, new org.netbeans.lib.awtextra.AbsoluteConstraints(785, 203, 200, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Price:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(622, 492, -1, 31));

        jtfPrice.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jtfPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfPriceKeyReleased(evt);
            }
        });
        getContentPane().add(jtfPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(785, 492, 200, -1));

        btnAddProduct.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnAddProduct.setText("Add Product");
        btnAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProductActionPerformed(evt);
            }
        });
        getContentPane().add(btnAddProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(622, 557, 164, -1));

        btnDeleteProduct.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnDeleteProduct.setText("Delete Product");
        btnDeleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteProductActionPerformed(evt);
            }
        });
        getContentPane().add(btnDeleteProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(622, 648, 164, -1));

        btnUpdateProduct.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnUpdateProduct.setText("Update Product");
        btnUpdateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateProductActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdateProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(622, 599, -1, -1));

        jlbCategoryId.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jlbCategoryId.setText("CategoryId");
        getContentPane().add(jlbCategoryId, new org.netbeans.lib.awtextra.AbsoluteConstraints(785, 301, 200, 31));

        jlbCategoryName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jlbCategoryName.setText("CategoryName");
        getContentPane().add(jlbCategoryName, new org.netbeans.lib.awtextra.AbsoluteConstraints(785, 402, 200, 31));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Search Product:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1064, 113, -1, -1));

        jtfSearchProduct.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jtfSearchProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfSearchProductKeyReleased(evt);
            }
        });
        getContentPane().add(jtfSearchProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(1216, 110, 300, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        int confirmLogOut = JOptionPane.showConfirmDialog(null, "Are You Sure", "Exit", JOptionPane.YES_NO_OPTION);
        if (confirmLogOut == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        int confirmExit = JOptionPane.showConfirmDialog(null, "Are you sure?", "Back", JOptionPane.YES_NO_OPTION);
        if (confirmExit == 0) {
            setVisible(false);
            new CoffeeWithMe(usernameLogin).setVisible(true);
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void jtbCategoryComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jtbCategoryComponentShown
        try {
            // TODO add your handling code here:
            showCategoryTable();
        } catch (SQLException ex) {
            Logger.getLogger(ManageProduct.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jtbCategoryComponentShown

    private void btnAddCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCategoryActionPerformed
        // TODO add your handling code here:
        String categoryName = jtfCategoryName.getText();
        Category category = new Category(categoryName);
        try {
            int result = new CategoryDao().save(category);
            if (result == 1) {
                JOptionPane.showMessageDialog(null, "Them Loai San Pham Thanh Cong");
                jtfCategoryName.setText("");
                btnAddCategory.setEnabled(false);
            } else {
                JOptionPane.showMessageDialog(null, "Vui Long Thu Lai");
            }
            showCategoryTable();
            showProductTable();
            jlbCategoryId.setText("");
            jlbCategoryName.setText("");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Vui Long Thu Lai");
        }

    }//GEN-LAST:event_btnAddCategoryActionPerformed

    private void jtbCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbCategoryMouseClicked
        // TODO add your handling code here:
        int index = jtbCategory.getSelectedRow();
        DefaultTableModel modelCategory = (DefaultTableModel) jtbCategory.getModel();
        if (index >= 0) {
            btnDeleteCategory.setEnabled(true);
            jlbCategoryId.setText("" + (int) modelCategory.getValueAt(index, 0));
            jlbCategoryName.setText((String) modelCategory.getValueAt(index, 1));
        } else {
            jlbCategoryId.setText("");
            jlbCategoryName.setText("");
        }
        showBtnAddProduct();
    }//GEN-LAST:event_jtbCategoryMouseClicked

    private void btnDeleteCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCategoryActionPerformed
        // TODO add your handling code here:
        int index = jtbCategory.getSelectedRow();
        DefaultTableModel modelCategory = (DefaultTableModel) jtbCategory.getModel();
        if (index >= 0) {
            int categoryId = (int) modelCategory.getValueAt(index, 0);
            String categoryName = (String) modelCategory.getValueAt(index, 1);
            Category category = new Category(categoryName);
            category.setCategoryId(categoryId);
            try {
                int result = new CategoryDao().delete(category);
                if (result == 1) {
                    JOptionPane.showMessageDialog(null, "Xoa San Pham Thanh Cong");
                    btnDeleteCategory.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(null, "Vui Long Thu Lai");
                }
                showCategoryTable();
                showProductTable();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Vui Long Thu Lai");
            }
        }
    }//GEN-LAST:event_btnDeleteCategoryActionPerformed

    private void jtfCategoryNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCategoryNameKeyReleased
        // TODO add your handling code here:
        showBtnAddCategory();
        try {
            showCategoryTable();
        } catch (SQLException ex) {
            Logger.getLogger(ManageProduct.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jtfCategoryNameKeyReleased

    private void btnAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProductActionPerformed
        // TODO add your handling code here:
        String productName = jtfProductName.getText();
        try {
            int categoryId = Integer.parseInt(jlbCategoryId.getText());
            double price = Double.parseDouble(jtfPrice.getText());
            Product product = new Product(productName, categoryId, price);
            int result = new ProductDao().save(product);
            if (result == 1) {
                JOptionPane.showMessageDialog(null, "Them San Pham Thanh Cong");
            } else {
                JOptionPane.showMessageDialog(null, "Khong Them Duoc San Pham!");
            }
            clear();
            showProductTable();
            showCategoryTable();
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Vui Long Nhap Dung Kieu Du Lieu!");
            jtfPrice.setText("");
            btnAddProduct.setEnabled(false);
        } catch (SQLException sqlEx) {
            JOptionPane.showMessageDialog(null, "Khong Them Duoc San Pham!");
            clear();
        }
    }//GEN-LAST:event_btnAddProductActionPerformed

    private void jtfProductNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfProductNameKeyReleased
        showBtnAddProduct();
    }//GEN-LAST:event_jtfProductNameKeyReleased

    private void btnUpdateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateProductActionPerformed
        // TODO add your handling code here:
        int index = jtbProduct.getSelectedRow();
        DefaultTableModel productModel = (DefaultTableModel) jtbProduct.getModel();
        if (index >= 0) {
            int productId = (int) productModel.getValueAt(index, 0);
            String productName = jtfProductName.getText();
            int categoryId = Integer.parseInt(jlbCategoryId.getText());
            double price = Double.parseDouble(jtfPrice.getText());
            try {
                Product product = new Product(productName, categoryId, price);
                product.setProductId(productId);
                int result = new ProductDao().update(product);
                if (result == 1) {
                    JOptionPane.showMessageDialog(null, "Sua San Pham Thanh Cong");
                } else {
                    JOptionPane.showMessageDialog(null, "Sua San Pham Khong Thanh Cong");
                }
                clear();
                showProductTable();
                showCategoryTable();
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Vui Long Nhap Dung Kieu Du Lieu!");
            } catch (SQLException sqlEx) {
                JOptionPane.showMessageDialog(null, "Da Say Ra Loi!");
            }
        }
    }//GEN-LAST:event_btnUpdateProductActionPerformed

    private void jtbProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbProductMouseClicked
        // TODO add your handling code here:
        btnUpdateProduct.setEnabled(true);
        btnDeleteProduct.setEnabled(true);
        int index = jtbProduct.getSelectedRow();
        DefaultTableModel productModel = (DefaultTableModel) jtbProduct.getModel();
        if (index >= 0) {
            String productName = (String) productModel.getValueAt(index, 1);
            int categoryId = (int) productModel.getValueAt(index, 2);
            double price = (double) productModel.getValueAt(index, 3);
            jtfProductName.setText(productName);
            jtfPrice.setText(price + "");
            jlbCategoryId.setText("" + categoryId);
            try {
                jlbCategoryName.setText(new CategoryDao().get(categoryId).getCategoryName());
            } catch (SQLException ex) {
                Logger.getLogger(ManageProduct.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jtbProductMouseClicked

    private void jtfPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPriceKeyReleased
        // TODO add your handling code here:
        showBtnAddProduct();
    }//GEN-LAST:event_jtfPriceKeyReleased

    private void jtfSearchProductKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfSearchProductKeyReleased
        try {
            // TODO add your handling code here:
            showProductTable();
        } catch (SQLException ex) {
            Logger.getLogger(ManageProduct.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jtfSearchProductKeyReleased

    private void btnDeleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteProductActionPerformed
        // TODO add your handling code here:
        int index = jtbProduct.getSelectedRow();
        DefaultTableModel productModel = (DefaultTableModel) jtbProduct.getModel();
        if (index >= 0) {
            int productId = (int) productModel.getValueAt(index, 0);
            String productName = jtfProductName.getText();
            int categoryId = Integer.parseInt(jlbCategoryId.getText());
            double price = Double.parseDouble(jtfPrice.getText());
            try {
                Product product = new Product(productName, categoryId, price);
                product.setProductId(productId);
                int result = new ProductDao().delete(product);
                if (result == 1) {
                    JOptionPane.showMessageDialog(null, "Xoa San Pham Thanh Cong");
                } else {
                    JOptionPane.showMessageDialog(null, "Xoa San Pham Khong Thanh Cong");
                }
                clear();
                showProductTable();
                showCategoryTable();
            } catch (SQLException sqlEx) {
                JOptionPane.showMessageDialog(null, "Da Say Ra Loi!");
            }
        }
    }//GEN-LAST:event_btnDeleteProductActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageProduct().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCategory;
    private javax.swing.JButton btnAddProduct;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteCategory;
    private javax.swing.JButton btnDeleteProduct;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnUpdateProduct;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jlbCategoryId;
    private javax.swing.JLabel jlbCategoryName;
    private javax.swing.JTable jtbCategory;
    private javax.swing.JTable jtbProduct;
    private javax.swing.JTextField jtfCategoryName;
    private javax.swing.JTextField jtfPrice;
    private javax.swing.JTextField jtfProductName;
    private javax.swing.JTextField jtfSearchProduct;
    // End of variables declaration//GEN-END:variables
}
